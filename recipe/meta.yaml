{% set name = "torchaudio" %}
{% set version = "2.1.2" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://github.com/pytorch/audio/archive/refs/tags/v{{ version }}.tar.gz
  sha256: 82c2745a73172b495327ec36c6970ad5ad9d5d2ac44feeaea2617152f9393bf7
  # patches:
  #   - 0001-set-include-path.patch

build:
  number: 0
  skip: True  # [py>311]
  script:
    - export USE_FFMPEG=ON                         # [not win]
    - set USE_FFMPEG=ON                            # [win]
    - export BUILD_SOX=OFF                         # [not win]
    - set BUILD_SOX=OFF                            # [win]
    - export USE_OPENMP=ON                         # [not win]
    - set USE_OPENMP=ON                            # [win]
    - export BUILD_TORCHAUDIO_PYTHON_EXTENSION=ON  # [not win]
    - set BUILD_TORCHAUDIO_PYTHON_EXTENSION=ON     # [win]
    - export FFMPEG_ROOT=${PREFIX}                 # [not win]
    - set FFMPEG_ROOT=%LIBRARY_PREFIX%             # [win]
    - {{ PYTHON }} -m pip install . -vv --no-deps --no-build-isolation

requirements:
  build:
    - {{ compiler('cxx') }}
    - {{ compiler('c') }}
    - cmake
    - make  # [not win]
    - patch     # [not win]
    - m2-patch  # [win]
    - patchelf  # [linux]
    - protobuf {{ libprotobuf }}
    - llvm-openmp  # [osx]
    - intel-openmp  # [not osx and blas_impl == 'mkl']
  host:
    - python
    - setuptools
    - wheel
    - pip
    - pytorch 2.1.0
    - pybind11
    - ffmpeg >=6,<7
  run:
    - python
    # according to compatibility matrix in
    # https://github.com/pytorch/audio/blob/v2.1.2/docs/source/installation.rst#compatibility-matrix
    - pytorch >=2.1.0,<2.2.0
    # according to optional dependencies
    # https://github.com/pytorch/audio/blob/v2.1.2/docs/source/installation.rst#optional-dependencies
    # in this special case we want users of channel sfe140ed to be able to use the load and save functions, therefore
    # at least ffmpeg (the mightiest of the backends) is specified as a run dependency.
    - ffmpeg >=6,<7
    # this is not officially required but it is suggested in some upstream build examples and allows the correct library to be used 
    #- libprotobuf <4.21.0
  run_constrained:
    # according to optional dependencies
    # https://github.com/pytorch/audio/blob/main/docs/source/installation.rst#optional-dependencies
    # sox has been tested with version 14.4.2, but it is unlikely that other versions will work
    - sox >=14.4.2

# ignoring sox tests because we don't integrate sox
{% set ignore_modules =                  " --ignore=test/torchaudio_unittest/backend/soundfile --ignore=test/torchaudio_unittest/backend/dispatcher/soundfile" %}
{% set ignore_modules = ignore_modules + " --ignore=test/torchaudio_unittest/backend/dispatcher/sox --ignore=test/torchaudio_unittest/backend/sox_io" %}
# these tests import torchaudio.prototype which does not exist in main module
{% set ignore_modules = ignore_modules + " --ignore=test/integration_tests/prototype --ignore=test/integration_tests/rnnt_pipeline_test.py" %}

# test to skip because of missing deep-phonemizer
{% set ignore_modules = ignore_modules + " --ignore=test/integration_tests/ctc_decoder_integration_test.py" %}
# test to skip because of missing dependency
{% set ignore_modules = ignore_modules + " --ignore=test/integration_tests/tacotron2_pipeline_test.py" %}

test:
  source_files:
    - test/smoke_test
    - test/integration_tests
    - examples
  imports:
    - torchaudio
  commands:
    - pip check
    # skipping osx x86_64 tests because of segfaults
    #- pip install expecttest dataset kaldi-io  # [not (osx and x86_64)]
    #- export PYTHONPATH=$PWD/examples/hubert:$PYTHONPATH  # [not (osx and x86_64) and not win]
    #- set PYTHONPATH=%cd%\examples\hubert;%PYTHONPATH%  # [win]
    - python test/smoke_test/smoke_test.py
    - pytest -v {{ ignore_modules }} test/integration_tests
    # These tests are long and lead to resource exhaustion on osx-64 and linux-s390x
    #- pytest -v {{ ignore_modules }} -k "not ({{ tests_to_ignore }})" test/torchaudio_unittest  # [not (osx and x86_64) and not s390x]
  requires:
    - pip
    - pytest
    - typing
    - parameterized
    - scipy
    - numpy <1.24
    - scikit-learn
    - pillow

about:
  home: https://pytorch.org/audio/stable/index.html
  summary: Torchaudio is a library for audio and signal processing with PyTorch.
  description: |
    The aim of torchaudio is to apply PyTorch to the audio domain. By supporting PyTorch, torchaudio follows the same
    philosophy of providing strong GPU acceleration, having a focus on trainable features through the autograd system,
    and having consistent style (tensor names and dimension names). Therefore, it is primarily a machine learning
    library and not a general signal processing library. The benefits of PyTorch can be seen in torchaudio through
    having all the computations be through PyTorch operations which makes it easy to use and feel like a natural
    extension.
  license: BSD-2-Clause
  license_file: LICENSE
  license_family: BSD
  doc_url: https://pytorch.org/audio/main/torchaudio.html
  dev_url: https://github.com/pytorch/audio

extra:
  recipe-maintainers:
    - boldorider4
  skip-lints:
    - cbc_dep_in_run_missing_from_host
